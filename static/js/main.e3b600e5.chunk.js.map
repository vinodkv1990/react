{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","param","handleChange","e","setState","input","target","value","console","log","state","addItem","preventDefault","items","removeItem","i","filter","data","index","this","className","onSubmit","type","placeholder","onChange","map","val","aria-hidden","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEqBA,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOC,QAC/BC,QAAQC,IAAI,EAAKC,MAAML,QAVT,EAalBM,QAAU,SAACR,GACPA,EAAES,iBADS,IAEHP,EAAU,EAAKK,MAAfL,MACR,EAAKD,SAAS,CACVS,MAAM,GAAD,mBAAM,EAAKH,MAAMG,OAAjB,CAAwBR,IAC7BA,MAAO,MAlBG,EAsBlBS,WAAa,SAACC,GAOV,EAAKX,SAAS,CAACS,MAAO,EAAKH,MAAMG,MAAMG,QAAO,SAACC,EAAMC,GAAP,OAAgBA,IAAUH,QA3BxE,EAAKL,MAAQ,CACTL,MAAO,GACPQ,MAAO,IAJG,E,qDAgCT,IAAD,SAEqBM,KAAKT,MAAtBL,EAFJ,EAEIA,MAAOQ,EAFX,EAEWA,MAEf,OACI,sBAAKO,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,kBACA,sBAAMC,SAAUF,KAAKR,QAArB,SACI,qBAAKS,UAAU,YAAf,SACI,uBAAOE,KAAK,OAAOf,MAAOF,EAAOkB,YAAY,QAAQH,UAAU,mBAAmBI,SAAUL,KAAKjB,mBAGzG,oBAAIkB,UAAU,YAAd,SAEQP,EAAMY,KAAI,SAACC,EAAKR,GACZ,OACI,qBAAIE,UAAU,iBAAd,UACI,sBAAMA,UAAU,QAAhB,SAAyBF,EAAQ,IACjC,sBAAME,UAAU,QAAhB,SAAyBM,IACzB,mBAAGN,UAAU,gBAAgBO,cAAY,OAAOC,QAAS,WAAK,EAAKd,WAAWI,QAH9CA,e,GAlDlCW,a,MCUnBC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3b600e5.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nexport default class Todo extends Component{\r\n\r\n    constructor(param){\r\n        super(param);\r\n        this.state = {\r\n            input: \"\",\r\n            items: [],\r\n        }\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({input: e.target.value})\r\n        console.log(this.state.input);\r\n    }\r\n\r\n    addItem = (e)=>{\r\n        e.preventDefault();\r\n        const { input } = this.state;\r\n        this.setState({\r\n            items: [...this.state.items, input],\r\n            input: ''\r\n        })\r\n    }\r\n\r\n    removeItem = (i)=>{\r\n        // if(!window.confirm(\"sure?\")){\r\n        //     return;\r\n        // }\r\n        // let eventItems = this.state.items;\r\n        // eventItems.splice(i,1)\r\n        // this.setState({items: eventItems})\r\n        this.setState({items: this.state.items.filter((data, index)=> index !== i )})\r\n    }\r\n\r\n    render(){\r\n\r\n        const { input, items } = this.state;\r\n\r\n        return(\r\n            <div className=\"todo\">\r\n                <h2 className=\"main-title\">Todo</h2>\r\n                <form onSubmit={this.addItem}>\r\n                    <div className=\"input-div\">\r\n                        <input type=\"text\" value={input} placeholder=\"Event\" className=\"input-text small\" onChange={this.handleChange} />\r\n                    </div>\r\n                </form>\r\n                <ul className=\"todo-list\">\r\n                    {\r\n                        items.map((val, index)=>{\r\n                            return(\r\n                                <li className=\"todo-list-item\" key={index}>\r\n                                    <span className=\"count\">{index + 1}</span>\r\n                                    <span className=\"value\">{val}</span>\r\n                                    <i className=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={()=>{this.removeItem(index)}}></i>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Todo from \"./Todo\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/font-awesome/css/font-awesome.min.css';\nimport './assets/stylesheets/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}